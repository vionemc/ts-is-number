{
  "name": "is-number",
  "description": "Returns true if a number or string value is a finite number. Useful for regex matches, parsing, user input, etc. A Typescript refactor version.",
  "version": "1.0.0",
  "homepage": "https://github.com/vionemc/ts-is-number",
  "author": "Aminah Nuraini (https://github.com/vionemc)",
  "contributors": [
    "Aminah Nuraini (https://www.upwork.com/freelancers/aminahnuraini)"
  ],
  "repository": "vionemc/ts-is-number",
  "bugs": {
    "url": "https://github.com/vionemc/ts-is-number/issues"
  },
  "license": "MIT",
  "files": [
    "index.js"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.12.0"
  },
  "scripts": {
    "test": "mocha -r tsx src/test/test.ts"
  },
  "devDependencies": {
    "@types/chai": "^5.2.2",
    "@types/mocha": "^10.0.10",
    "@types/node": "^24.2.0",
    "ansi": "^0.3.1",
    "benchmark": "^2.1.4",
    "chai": "^5.2.1",
    "gulp-format-md": "^1.0.0",
    "mocha": "^11.7.1",
    "typescript": "^5.9.2",
    "tsx": "^4.20.3"
  },
  "keywords": [
    "typescript",
    "cast",
    "check",
    "coerce",
    "coercion",
    "finite",
    "integer",
    "is",
    "isnan",
    "is-nan",
    "is-num",
    "is-number",
    "isnumber",
    "isfinite",
    "istype",
    "kind",
    "math",
    "nan",
    "num",
    "number",
    "numeric",
    "parseFloat",
    "parseInt",
    "test",
    "type",
    "typeof",
    "value"
  ],
  "verb": {
    "toc": false,
    "layout": "default",
    "tasks": [
      "readme"
    ],
    "related": {
      "list": [
        "is-plain-object",
        "is-primitive",
        "isobject",
        "kind-of"
      ]
    },
    "plugins": [
      "gulp-format-md"
    ],
    "lint": {
      "reflinks": true
    }
  }
}
